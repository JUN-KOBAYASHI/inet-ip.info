# Golang CircleCI 2.0 configuration file
# vim:set ts=2 sts=2 sw=2:
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  test:
    docker:
      - image: circleci/golang:1.8
    working_directory: /go/src/github.com/masahide/inet-ip.info
    environment:
      TEST_RESULTS: /tmp/test-results
    steps:
      - checkout
      - run: cp ga_id.go.example ga_id.go
      - run: git tag -l 
      - run: mkdir -p $TEST_RESULTS
      - run: go get github.com/golang/dep/cmd/dep
      - run: dep ensure 
      - run: dep status
      - run: go test $(go list ./... | grep -v /vendor/) | tee -a ${TEST_RESULTS}/go-test.out
      - run: test -z "$(gofmt -s -l main.go | tee -a ${TEST_RESULTS}/go-test.out)"
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results
  release:
    docker:
      - image: circleci/golang:1.8
    working_directory: /go/src/github.com/masahide/inet-ip.info
    environment:
      RESULTS: /tmp/release-results
    steps:
      - checkout
      - run: cp ga_id.go.example ga_id.go
      - run: sed -i -e "s/UA-000000-00/${GA_TID}/" ga_id.go
      - run: sed -i -e "s/00000000-0000-0000-00000000000000000/${GA_NAMESPACE}/" ga_id.go
      - run: go get github.com/mitchellh/gox
      - run: go get github.com/tcnksm/ghr
      - run: go get github.com/golang/dep/cmd/dep
      - run: dep ensure 
      - run: dep status
      - run: gox --osarch "linux/386 linux/amd64 darwin/386 darwin/amd64" -ldflags "-X main.Version=$(git describe --always --dirty) -X main.Date=${BUILD_DATE}" -output "${RESULTS}/{{.OS}}_{{.Arch}}/${CIRCLE_PROJECT_REPONAME}"
      - run: cd ${RESULTS};for i in $(ls);do tar -cvzf "${CIRCLE_PROJECT_REPONAME}_${i}.tar.gz" "${i}";rm -rf "${i}";done
      - run: ghr -t "${GITHUB_TOKEN}" -u "${CIRCLE_PROJECT_USERNAME}" -r "${CIRCLE_PROJECT_REPONAME}" --replace `git describe --tags` ${RESULTS}/ 
      - store_artifacts:
          path: /tmp/release-results
          destination: build_tar_gz
      - store_test_results:
          path: /tmp/release-results

workflows:
  version: 2
  btd:
    jobs:
      - test
      - release:
          requires:
            - test
          filters:
            branches:
              only: /^v\.?[0-9].*[0-9]$/
